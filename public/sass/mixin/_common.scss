@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }

  &::before,
  &::after {
    box-sizing: border-box;
  }
}

@mixin textOverflow {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin ETAnimationMixin($pf) {
  .#{$pf}-enter,
  .#{$pf}-leave {
    animation-duration: 0.3s;
    animation-fill-mode: both;
    animation-play-state: paused;
  }

  .#{$pf}-enter.#{$pf}-enter-active {
    animation-play-state: running;
  }

  .#{$pf}-leave.#{$pf}-leave-active {
    animation-play-state: running;
    pointer-events: none;
  }

  .#{$pf}-enter,
  .#{$pf}-leave {
    animation-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
  }

  // 通用情况下不应该存在这个
  // .#{$pf}-enter {
  //   opacity: 0;
  // }
}

// 文字最多展示 n 行
@mixin lineMax($n) {
  display: -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

$nn: 7;
@mixin hoverTransitionDelay {
  @for $i from 1 through $nn {
    &:nth-child(#{$nn}n + #{$i}) {
      transition-delay: #{0.06 * $i}s;
    }
  }
}

@mixin leaveTransitionDelay {
  @for $i from 1 through $nn {
    &:nth-child(#{$nn}n + #{$i}) {
      transition-delay: #{0.06 * ($nn - $i)}s;
    }
  }
}

$RYBGList: (1, $red), (2, $yellow), (3, $blue), (4, $green);
@mixin RYBG {
  @each $i, $color in $RYBGList {
    &:nth-child(5n + #{$i}) {
      background-color: $color;
    }
  }
}
